==2157== Memcheck, a memory error detector
==2157== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==2157== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==2157== Command: ./foo
==2157== 
==2157== Invalid write of size 1
==2157==    at 0x400F8D: cmd_add_byte (menu_system.c:202)
==2157==    by 0x40149C: process_cmd (menu_system.c:402)
==2157==    by 0x40170D: screenio (setterm.c:121)
==2157==    by 0x401549: main (setterm.c:42)
==2157==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2157== 
==2157== 
==2157== Process terminating with default action of signal 11 (SIGSEGV)
==2157==  Access not within mapped region at address 0x0
==2157==    at 0x400F8D: cmd_add_byte (menu_system.c:202)
==2157==    by 0x40149C: process_cmd (menu_system.c:402)
==2157==    by 0x40170D: screenio (setterm.c:121)
==2157==    by 0x401549: main (setterm.c:42)
==2157==  If you believe this happened as a result of a stack
==2157==  overflow in your program's main thread (unlikely but
==2157==  possible), you can try to increase the size of the
==2157==  main thread stack using the --main-stacksize= flag.
==2157==  The main thread stack size used in this run was 8388608.
==2157== 
==2157== HEAP SUMMARY:
==2157==     in use at exit: 0 bytes in 0 blocks
==2157==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==2157== 
==2157== All heap blocks were freed -- no leaks are possible
==2157== 
==2157== For counts of detected and suppressed errors, rerun with: -v
==2157== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)
